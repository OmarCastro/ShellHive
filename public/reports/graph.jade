//-div(sidebar)
.popupArea
    .popup.dropdown.open
        ul.dropdown-menu.well
            form(ng:submit="graph.popupSubmit(popupText)")
                div.input-group.input-group-sm
                    span.input-group-addon.glyphicon.glyphicon-tasks
                    input.form-control(type="text" ng-model="popupText")
            li.dropdown-header(ng-show="comms.length"): b command component
            li(ng-class="cl" ng-mouseenter="cl = 'active'" ng-mouseleave="cl = ''" ng-repeat="foo in comms = (implementedCommands | filter:popupText)")
                a(ng-click="graph.popupSubmit(foo)") {{foo}}
            li.dropdown-header(ng-show="comms2.length && isRootView()"): b macro component
            li(ng-class="cl" ng-mouseenter="cl = 'active'" ng-mouseleave="cl = ''" ng-repeat="foo in comms2 = (macroViewList() | filter:popupText)")
                a(ng-click="graph.popupSubmit(foo)") {{foo}}

    .selectpopup.dropdown.open(ng-if="sel.open" ng-style="{transform:sel.transform, WebkitTransform:sel.transform, MsTransform:sel.transform}")
        ul.dropdown-menu
            li(ng-repeat="c in options[sel.data.exec][sel.name]")
                a(ng-click="graph.selectSelection(c)"): span(ng-bind="c")

.navbar.navbar-default
    .collapse.navbar-collapse
        ul.nav.navbar-nav
            li.dropdown
                a(href="#" class="dropdown-toggle" data-toggle="dropdown")
                    | Macro 
                    b.caret
                ul.dropdown-menu
                    li: a(ng-click="newMacroModal()") New Macro
                    li.divider
                    li.dropdown-header created Macros
                    li(ng-repeat="macro in graphModel.macroList")
                        a(ng-bind="macro" ng-click="macroEditModal(macro)")
            li.dropdown
                a(href="#" class="dropdown-toggle" data-toggle="dropdown")
                    | Add Command 
                    b.caret
                ul.dropdown-menu
                    li(ng-repeat="command in implementedCommands") 
                        a(ng-click="newCommandAtTopLeft(command)", ng-bind="command")

            li.dropdown
                a(href="#" class="dropdown-toggle" data-toggle="dropdown")
                    | View
                    b.caret
                ul.dropdown-menu
                    li: a(href="#" ng-click="shell = !shell") Toogle shell
                    li: a(href="#" ng-click="toRootView()") View Root

            li: a(href="#" ng-click="shell = true; $emit('runCommand', [])")
                span.glyphicon.glyphicon-play &nbsp;
                span Run
        ul.nav.navbar-nav.navbar-right
            li: a(href="#" ng-click="showTips = !showTips") Docs
            li: a(href="#") Username
            li: span.glyphicon.glyphicon-user.user-icon


.tips(ng-if="showTips")
    tabset
        tab(heading="Components")
            :markdown
                #Components

                In this module exists 3 types of componenrs
                
                - ** Command Component ** - represents a Unix command
                - ** File Components ** - represents a file that will be used for input and output
                - ** Macro Components ** - represents macros in the graph, a macro is a composition of interconnected commands

                ## Creating components

                There are 2 ways to create components, one way is by using the top bar, and the
                other by connecting a port to an empty space

                When connecting to an empty space a popup menu appears

            h3 Creating a command component by using the mouse
            img(src="tipsNtricks/newComponentMouse.svg" width="45%")
            | > > > >
            img(src="tipsNtricks/newComponentResult.svg" width="45%")
            br
            h3 Creating command component by using the text field
            br
            img(src="tipsNtricks/newComponentText.svg" width="45%")
            | > > > >
            img(src="tipsNtricks/newComponentResult.svg" width="45%")
            br
            h3 Creating file component by using the text field
            br
            img(src="tipsNtricks/newFileComponentText.svg" width="45%")
            | > > > >
            img(src="tipsNtricks/newFileComponentResult.svg" width="45%")
            br
            h3 Creating command component with arguments by using the text field
            br
            img(src="tipsNtricks/newFullCommandComponentText.svg" width="45%")
            | > > > >
            img(src="tipsNtricks/newFullCommandComponentTextResult.svg" width="45%")

        tab(heading="Macros")
            :markdown
                #Macros

                

div.layout(ui-layout)
    div.toplayout
        div.background
            svg(touch-action="none"): g.edges
                path.emptyEdge
                path.back(connector,ng-repeat="edge in visualData.connections")
                path(connector,ng-repeat="edge in visualData.connections")
            .workspace(touch-action="none")
                .nodes
                    include ccomponent.jade
    .shell(ng-show="shell" touch-action="all")
        div(ng-repeat="line in $parent.shellText" ng-class="line.type" ng-bind="line.text")