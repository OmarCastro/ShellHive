.component(component,ng-repeat="(id, data) in visualData.components" data-node-id="{{data.id}}" ng-style="{transform:transform, WebkitTransform:transform, MsTransform:transform}")
    div(ng-if="data.type == 'file'")
        .title(title="{{data.macro.description}}") 
            | FILE
            a.close-button.glyphicon.glyphicon-remove(ng-click="graph.removeComponent(data.id)")
        .ports
            .input
                span.box(data-port="input")
                span.text &nbsp;overwrite&nbsp;&nbsp;
                br
                span.box(data-port="append")
                span.text &nbsp;append&nbsp;&nbsp;
            .output(style="text-align: right")
                span.text &nbsp;&nbsp;content&nbsp;
                span.box(data-port="output")
        br
        br
        pre {{data.filename}}

    div(ng-if="data.type == 'subgraph'")
        .title(title="{{data.macro.description}}") 
            span(ng-bind="data.macro.name")
            a.close-button.glyphicon.glyphicon-remove(ng-click="graph.removeComponent(data.id)")

        .ports
            .input
                span.box(data-port="input")
                span.text &nbsp;stdin&nbsp;&nbsp;
            .output(style="text-align: right")
                span.text &nbsp;&nbsp;stdout&nbsp;
                span.box(data-port="output")
                br
                span.text &nbsp;&nbsp;stderr&nbsp;
                span.box(data-port="error")
                br
                span.text &nbsp;&nbsp;return&nbsp;
                span.box(data-port="retcode")
        br
        br
        br
        div.
            {{data.macro.description}}
        button(ng-click="graph.setGraphView(data.macro)").
            view macro
    div(ng-if="data.type == 'command'")
        .title 
            span(ng-bind="data.exec")
            a.close-button.glyphicon.glyphicon-remove(ng-click="graph.removeComponent(data.id)")
        .ports
            .input
                span.box(data-port="input")
                span.text &nbsp;stdin&nbsp;&nbsp;
            .output(style="text-align: right")
                span.text &nbsp;&nbsp;stdout&nbsp;
                span.box(data-port="output")
                br
                span.text &nbsp;&nbsp;stderr&nbsp;
                span.box(data-port="error")
                br
                span.text &nbsp;&nbsp;return&nbsp;
                span.box(data-port="retcode")
        br
        br
        br
        div(ng-if="isImplemented(data) && data.files !== undefined")
            | files :
            br(ng-if="data.files.length > 0")
            div(ng-repeat="file in data.files track by $index") 
                span.box(data-port="file{{$index}}")
                input(type="text",ng-model="data.files[$index]" ng-if="isString(data.files[$index])")
                span(ng-bind-template="{{' '+data.files[$index][0]+' '}}" ng-if="isArray(data.files[$index])")
                button(ng-click="data.files.splice($index,1)"). -
                button(ng-click="swapPrevious(data.files,$index,data.id)",ng-if="$index"). &#11014;
                button(ng-click="swapPrevious(data.files,$index + 1,data.id)",ng-if="$index != data.files.length -1 "). &#11015;
                br
            button(ng-click="data.files.push('')"). +
            br


        div(ng-if="data.exec == 'awk'")
            | script:
            br 
            textarea(type="text", ng-model='data.script')


        div(ng-if="isImplemented(data) && data.parameters")
            div(ng-repeat="(name, option) in data.parameters track by name")
                .input-group.input-group-sm
                    span.input-group-addon(ng-bind="name")
                    input.form-control(type="text", ng-model='data.parameters[name]')

        div(ng-if="data.exec == 'grep'")
            div
                label
                    | pattern:
                    input(type="text",ng-model="data.pattern")
                br

        div(ng-if="isImplemented(data) && data.selectors")
            form(name="myForm" ng-repeat="(name, option) in data.selectors track by name")
                .input-group.input-group-sm(ng-class="{'has-error': myForm.field.$invalid}")
                    label.input-group-addon(ng-bind="name")
                    input.form-control(type="number",name="field" ng-model="data.selectors[name].value" ng-if="data.selectors[name].type == 'numeric parameter'"
                        min="0" required)
                    .input-group-btn
                        button.btn.btn-default(elscope,type="button" ng-click="graph.setSelection({data:data, name:name},scopedElement)")
                            span(ng-bind="data.selectors[name].name")
                            | &nbsp;
                            span.caret
                    input.form-control(type="text",ng-model="data.selectors[name].value", name="field",ng-if="data.selectors[name].type == 'parameter'")
        div
            div(ng-repeat="(name, val) in data.flags track by name" ng-click="data.flags[name] = !val")
                span.glyphicon(ng-class="(val)?'glyphicon-check':'glyphicon-unchecked'")
                span &nbsp;
                label(ng-bind="name")
